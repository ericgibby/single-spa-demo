{"version":3,"file":"shared-components.umd.production.min.js","sources":["../src/hooks/useBase.ts","../src/error-fallback/error-fallback.component.tsx","../src/hooks/useNgZone.ts","../src/single-spa-link/single-spa-link.component.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\nexport function useBase() {\n\tconst base = useMemo(() => {\n\t\tconst { pathname } = new URL(document.baseURI);\n\t\treturn pathname;\n\t}, [document.baseURI]);\n\treturn base;\n}\n","import React from 'react';\n\ntype ErrorFallbackProps = { error?: Error };\n\nexport function ErrorFallback({ error }: ErrorFallbackProps) {\n\treturn (\n\t\t<div>\n\t\t\t<p>Something when wrong:</p>\n\t\t\t<pre style={{ color: 'red' }}>{error?.message}</pre>\n\t\t</div>\n\t);\n}\n","import { useMemo } from 'react';\n\ntype Zone = {\n\trun: <T1, T2>(fn: () => T1) => T2;\n\trunOutsideAngular: <T1, T2>(fn: () => T1) => T2;\n};\n\nexport function useNgZone(name?: string) {\n\tconst currentZones: Record<string, Zone> = (window as any)['NgZone'];\n\treturn useMemo(() => {\n\t\tconst zones: Record<string, Zone> = currentZones ?? {};\n\t\tlet zoneName = name;\n\t\tif (!name) {\n\t\t\tzoneName = Object.keys(zones).shift();\n\t\t}\n\t\treturn zones[zoneName || ''];\n\t}, [currentZones, name]);\n}\n","import React, { AnchorHTMLAttributes, ReactNode, SyntheticEvent } from 'react';\nimport { navigateToUrl } from 'single-spa';\nimport { useBase } from '../hooks/useBase';\nimport { useNgZone } from '../hooks/useNgZone';\n\ntype SingleSpaLinkProps = {\n\tchildren?: ReactNode;\n\tto: string;\n\tzone?: string;\n};\n\nexport function SingleSpaLink({ children, to, zone = '', ...props }: SingleSpaLinkProps & AnchorHTMLAttributes<ReactNode>) {\n\tconst base = useBase();\n\tconst href = `${base}${to ? '/' + to.replace(/^\\//, '') : ''}`;\n\tconst ngZone = useNgZone(zone);\n\n\tconst handleClick = (e: SyntheticEvent) => {\n\t\te.preventDefault();\n\t\tif (ngZone) {\n\t\t\tngZone.runOutsideAngular(() => {\n\t\t\t\tnavigateToUrl(href);\n\t\t\t});\n\t\t} else {\n\t\t\tnavigateToUrl(href);\n\t\t}\n\t};\n\n\treturn (\n\t\t<a {...props} href={href} onClick={handleClick}>\n\t\t\t{children}\n\t\t</a>\n\t);\n}\n"],"names":["useBase","useMemo","URL","document","baseURI","pathname","error","React","style","color","message","name","currentZones","children","to","zone","props","href","replace","ngZone","window","zones","zoneName","Object","keys","shift","onClick","e","preventDefault","runOutsideAngular","navigateToUrl"],"mappings":"+UAEgBA,WACFC,WAAQ,kBACC,IAAIC,IAAIC,SAASC,SAA9BC,WAEN,CAACF,SAASC,0CCFkBE,IAAAA,aAE9BC,2BACCA,kDACAA,uBAAKC,MAAO,CAAEC,MAAO,cAAUH,SAAAA,EAAOI,2CCDfC,EACnBC,ECGyBC,IAAAA,SAAUC,IAAAA,OAAIC,KAAAA,aAAO,KAAOC,iKAErDC,EADOjB,KACUc,EAAK,IAAMA,EAAGI,QAAQ,MAAO,IAAM,IACpDC,GDPmBR,ECOAI,EDNnBH,EAAsCQ,OAAc,OACnDnB,WAAQ,eACRoB,QAA8BT,EAAAA,EAAgB,GAChDU,EAAWX,SACVA,IACJW,EAAWC,OAAOC,KAAKH,GAAOI,SAExBJ,EAAMC,GAAY,MACvB,CAACV,EAAcD,YCYjBJ,qCAAOS,GAAOC,KAAMA,EAAMS,QAZP,SAACC,GACpBA,EAAEC,iBACET,EACHA,EAAOU,mBAAkB,WACxBC,gBAAcb,MAGfa,gBAAcb,MAMbJ"}